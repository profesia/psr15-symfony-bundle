<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
        https://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <!-- Default configuration for services in *this* file -->
        <defaults autowire="true" autoconfigure="true" public="false"/>

        <service id="Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory"/>

        <service id="Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory">
            <argument key="$serverRequestFactory" type="service" id="nyholm.psr7.psr17_factory"/>
            <argument key="$streamFactory" type="service" id="nyholm.psr7.psr17_factory"/>
            <argument key="$uploadedFileFactory" type="service" id="nyholm.psr7.psr17_factory"/>
            <argument key="$responseFactory" type="service" id="nyholm.psr7.psr17_factory"/>
        </service>

        <service id="Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory"/>

        <service id="Profesia\Symfony\Psr15Bundle\Adapter\SymfonyControllerAdapter">
            <argument key="$httpMiddlewareResolver" type="service" id="Profesia\Symfony\Psr15Bundle\Resolver\MiddlewareResolver"/>
            <argument key="$foundationFactory" type="service" id="Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory"/>
            <argument key="$psrRequestFactory" type="service" id="Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory"/>
            <argument key="$router" type="service" id="router.default"/>
        </service>

        <service id="Profesia\Symfony\Psr15Bundle\RequestHandler\Factory\SymfonyControllerRequestHandlerFactory">
            <argument key="$foundationHttpFactory" type="service" id="Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory"/>
            <argument key="$psrHttpFactory" type="service" id="Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory"/>
            <argument key="$requestStack" type="service" id="request_stack"/>
        </service>

        <service id="Profesia\Symfony\Psr15Bundle\Event\Subscriber\MiddlewareInjectionSubscriber">
            <tag name="kernel.event_subscriber"/>
            <argument key="$symfonyControllerAdapter" type="service" id="Profesia\Symfony\Psr15Bundle\Adapter\SymfonyControllerAdapter"/>
        </service>

        <service id="Profesia\Symfony\Psr15Bundle\Resolver\Strategy\RouteNameResolver" shared="false">
            <argument key="$router" type="service" id="router.default"/>
        </service>

        <service id="Profesia\Symfony\Psr15Bundle\Resolver\Strategy\CompiledPathResolver" shared="false">
        </service>

        <service id="Profesia\Symfony\Psr15Bundle\Resolver\Factory\StrategyResolverFactory"/>

        <service id="Profesia\Symfony\Psr15Bundle\Console\Command\ListMiddlewareRulesCommand">
            <tag name="console.command"/>
            <argument key="$routeNameStrategyResolver" type="service" id="Profesia\Symfony\Psr15Bundle\Resolver\Strategy\RouteNameResolver"/>
            <argument key="$compiledPathStrategyResolver" type="service"
                      id="Profesia\Symfony\Psr15Bundle\Resolver\Strategy\CompiledPathResolver"/>
        </service>

        <service id="Profesia\Symfony\Psr15Bundle\Console\Command\WarmUpMiddlewareCacheCommand">
            <tag name="console.command"/>
            <argument type="service" id="router.default"/>
            <argument type="service" id="MiddlewareChainResolverCacheRemoval"/>
        </service>

        <service id="MiddlewareChainResolver" class="Profesia\Symfony\Psr15Bundle\Resolver\Strategy\RouteNameResolver">
            <factory service="Profesia\Symfony\Psr15Bundle\Resolver\Factory\StrategyResolverFactory" method="create"/>
            <argument type="collection">
                <argument type="service" id="Profesia\Symfony\Psr15Bundle\Resolver\Strategy\RouteNameResolver"/>
                <argument type="service" id="Profesia\Symfony\Psr15Bundle\Resolver\Strategy\CompiledPathResolver"/>
            </argument>
        </service>

        <service id="Profesia\Symfony\Psr15Bundle\Resolver\MiddlewareResolver">
            <argument key="$middlewareResolverChain" type="service" id="MiddlewareChainResolver"/>
            <argument key="$logger" type="service" id="logger" on-invalid="null"/>
            <tag name="monolog.logger" channel="middleware"/>
        </service>

        <service id="cache.psr15-middleware" parent="cache.system" public="false">
            <tag name="cache.pool"/>
        </service>

        <service id="MiddlewareChainResolverCaching" class="Profesia\Symfony\Psr15Bundle\Resolver\Decorator\MiddlewareResolverCaching">
            <argument key="$resolver" type="service" id="Profesia\Symfony\Psr15Bundle\Resolver\MiddlewareResolver"/>
            <argument key="$cache" type="service" id="cache.psr15-middleware"/>
        </service>

        <service id="MiddlewareChainResolverCacheRemoval" class="Profesia\Symfony\Psr15Bundle\Resolver\Decorator\MiddlewareResolverCacheRemoval">
            <argument key="$decoratedObject" type="service" id="MiddlewareChainResolverCaching"/>
            <argument key="$cache" type="service" id="cache.psr15-middleware"/>
        </service>
    </services>
</container>
